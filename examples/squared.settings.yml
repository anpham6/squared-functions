cloud:
  aws:
    main:
      accessKeyId: ""
      secretAccessKey: ""
  azure:
    main:
      accountName: ""
      accountKey: ""
    db-main:
      endpoint: ""
      key: ""
  gcloud:
    main:
      keyFilename: ""
    db-main:
      keyFilename: ""
  oci:
    main:
      region: ""
      namespace: ""
      accessKeyId: ""
      secretAccessKey: ""
    db-main:
      user: ""
      password: ""
      connectionString: ""
  ibm:
    main:
      apiKeyId: ""
      serviceInstanceId: ""
      endpoint: ""
      region: ""
task:
  gulp:
    handler: "@squared-functions/task/gulp"
    settings:
      minify: "./gulpfile.js"
document:
  chrome:
    handler: "@squared-functions/document/chrome"
    eval_function: true
    eval_template: true
    settings:
      transform:
        html:
          prettier:
            beautify:
              parser: html
              printWidth: 120
              tabWidth: 4
        js:
          terser:
            minify-example: |
              async function(context, value, options) {
                return await context.minify(value, options.outputConfig).code;
              }
            minify-example-output:
              keep_classnames: true
          "@babel/core":
            es5-example: "./es5.js"
          rollup:
            bundle: "./rollup.config.js"
            bundle-es6:
              external:
              - lodash
            bundle-es6-output: "./rollup.output.config.js"
        css:
          node-sass:
            sass-example: |
              function(context, value, options, resolve) {
                return resolve(context.renderSync({ ...options.outputConfig, data: value }, functions: {}).css);
              }
